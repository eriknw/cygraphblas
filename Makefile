SHELL= /bin/bash
PYTHON ?= python

.PHONY: all gen cy ss inplace clean cleangen cleanall

all: clean cleangen gen inplace

# For now, assume we are using a conda environment with graphblas and pycparser
scripts/GraphBLAS.h:
	conda list -f graphblas | grep graphblas
	conda list -f pycparser | grep pycparser
	cp `python -c 'import pycparser, os ; print(os.path.join(os.path.dirname(pycparser.__file__), "..", "..", "..", "..", "include", "GraphBLAS.h"))'` scripts/GraphBLAS.h

scripts/GraphBLAS-processed.h: scripts/GraphBLAS.h
	conda list -f pycparser | grep pycparser
	gcc -nostdinc -E \
	-I`python -c 'import pycparser, os ; print(os.path.join(os.path.dirname(pycparser.__file__), "utils", "fake_libc_include"))'` \
	scripts/GraphBLAS.h | \
	sed 's/ complex / _Complex /g' > scripts/GraphBLAS-processed.h

gen: scripts/GraphBLAS-processed.h
	$(PYTHON) scripts/automate.py

cy:
	$(PYTHON) setup.py build_ext --inplace

ss:
	$(PYTHON) setup_ss.py build_ext --inplace

inplace: cy ss

clean:
	rm -rf build/
	rm -rf cygraphblas/__pycache__/ cygraphblas/*/__pycache__/ cygraphblas/*/*/__pycache__/
	rm -rf cygraphblas_ss/__pycache__/
	rm -f cygraphblas/*.c cygraphblas/*.so cygraphblas/*/*.c cygraphblas/*/*.so cygraphblas/*/*/*.c cygraphblas/*/*/*.so
	rm -f cygraphblas_ss/*.c cygraphblas_ss/*.so cygraphblas_ss/*/*.c cygraphblas_ss/*/*.so

cleangen:
	-git grep -l '^# This file is automatically generated' cygraphblas/ cygraphblas_ss/
	-git grep -l '^# This file is automatically generated' cygraphblas/ cygraphblas_ss/ | xargs rm

cleanall: clean cleangen
	rm -f scripts/GraphBLAS.h scripts/GraphBLAS-processed.h
	rm -f cygraphblas/*.html cygraphblas/*/*.html cygraphblas/*/*/*.html
	rm -f cygraphblas_ss/*.html cygraphblas_ss/*/*.html
